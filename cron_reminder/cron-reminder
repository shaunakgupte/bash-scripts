#!/bin/bash
#===============================================================================
#
#         FILE: cron-reminder
#
#        USAGE: cron-reminder [add|remove|list|show|install]
#     
#  DESCRIPTION: Script to add periodic pop-up reminders
#
#      OPTIONS: see function 'usage' below
#
#       AUTHOR: Shaunak Gupte <gupte.shaunak@gmail.com>
#
#===============================================================================

REMINDERS_FILE=$HOME/.reminders

usage ()
{
  SCRIPT_NAME=`basename "$0"`
  echo "usage: $SCRIPT_NAME [add|remove|list|show|install]

Report bugs to: Shaunak Gupte <gupte.shaunak@gmail.com>"
}

usage_error ()
{
  echo "ERROR: $1"
  usage
  exit 1
}

error ()
{
  echo "ERROR: $1"
  exit 1
}

check_install ()
{
  SCRIPT_NAME=`basename $0`
  SCRIPT=`realpath $0`

  if crontab -l | grep "$SCRIPT" > /dev/null 2>&1 ; then
    return 0
  fi

  error "$SCRIPT_NAME has not been installed. Install using $0 install"

}

add_reminder ()
{
  echo "Adding Reminder"
  while [ 1 ]; do
  read -p "Enter message:" msg
  if [ ! -z $msg ]; then
    break
  fi
  done

  DATE_STR=`date +"%Y/%m/%d %H:%M"`
  while [ 1 ]; do
    read -p "Start Time (format=YYYY/MM/DD HH:MM) [$DATE_STR]:" date
    if [ -z $date ]; then
      date=$DATE_STR;
      break;
    elif date -d "$date" >/dev/null 2>&1 ; then
      break
    fi
  done
  DATE_STR=`date -d "$date" +"%Y/%m/%d %H:%M"`

  REMINDER="Once"
  while [ 1 ]; do
    read -n 1 -p "Remind (o)nce|(h)ourly|(d)aily|(w)eekly [o]:" remind
    if [ -z $remind ]; then
      break;
    fi
    echo
    case $remind in
      o|O)
        REMINDER="Once"
        break;;
      h|H)
        REMINDER="Hourly"
        break;;
      d|D)
        REMINDER="Daily"
        break;;
      w|W)
        REMINDER="Weekly"
        break;;
    esac
  done;

  echo "

Message: $msg
Start Time: $DATE_STR
Reminder: $REMINDER"

  while [ 1 ]; do
  read -n1 -p "Confirm [Y/n]?" confirm
    echo
    case $confirm in
      n|N)
        exit 0 ;;
      y|Y)
        break ;;
    esac
  done

  echo "$DATE_STR|$REMINDER|$msg" >> $REMINDERS_FILE

  notify-send "Added reminder '$msg'"
}

list_reminders ()
{
  REMINDER_COUNT=0;
  while read line; do
    echo
    REMINDER_COUNT=$((REMINDER_COUNT + 1))
    START=`echo "$line" | awk -F'|' '{print $1}'`
    TYPE=`echo "$line" | awk -F'|' '{print $2}'`
    MSG=`echo "$line" | awk -F'|' '{print $3}'`
    echo "[$REMINDER_COUNT] Message : $MSG"
    START_STR=`date -d "$START" +"%Y/%m/%d %H:%M"`
    echo "    Start   : $START_STR"
    echo "    Remind  : $TYPE"
  done < "$REMINDERS_FILE"
}

remove_reminder ()
{
  list_reminders
  if [ $REMINDER_COUNT -eq 0 ]; then
    echo "No reminders added"
    exit 0
  fi
  while [ 1 ]; do
  read -p "Enter id to remove [1-$REMINDER_COUNT]:" id
  if [[ $id -gt 0 && $id -le $REMINDER_COUNT ]]; then
    break
  fi
  done

  line=`sed "$id q;d" $REMINDERS_FILE`
  START=`echo "$line" | awk -F'|' '{print $1}'`
  TYPE=`echo "$line" | awk -F'|' '{print $2}'`
  MSG=`echo "$line" | awk -F'|' '{print $3}'`

  echo
  echo "Message : $MSG"
  START_STR=`date -d "$START" +"%Y/%m/%d %H:%M"`
  echo "Start   : $START_STR"
  echo "Remind  : $TYPE"

  while [ 1 ]; do
    read -n1 -p "Confirm Removal [Y/n]?" confirm
    echo
    case $confirm in
      n|N)
        exit 0 ;;
      y|Y)
        break ;;
    esac
  done

  sed "$id d" -i $REMINDERS_FILE
  notify-send "Removed reminder '$MSG'"
}

show_reminders ()
{
  REMINDER_COUNT=0;
  while read line; do
    REMINDER_COUNT=$((REMINDER_COUNT + 1))
    START=`echo "$line" | awk -F'|' '{print $1}'`
    TYPE=`echo "$line" | awk -F'|' '{print $2}'`
    MSG=`echo "$line" | awk -F'|' '{print $3}'`

    case $TYPE in
      Once)
        notify-send "Reminder" "$MSG"
        sed "$REMINDER_COUNT d" -i $REMINDERS_FILE;;
      Hourly)
        notify-send "Reminder" "$MSG";;
      Daily)
        START_TIME=`date -d "$START" +%s`
        CUR_TIME=`date +%s`
        if [ `echo "(($CUR_TIME % 86400) - ($START_TIME % 86400)) < 3600" | bc` == "1" ] ; then
          notify-send "Reminder" "$MSG"
        fi;;
      Weekly)
        START_TIME=`date -d "$START" +%s`
        CUR_TIME=`date +%s`
        if [ `echo "(($CUR_TIME % 604800) - ($START_TIME % 604800)) < 3600" | bc` == "1" ] ; then
          notify-send "Reminder" "$MSG"
        fi;;
    esac
  done < "$REMINDERS_FILE"
}

install ()
{
  FILE=`mktemp`
  crontab -l > $FILE
  SCRIPT=`realpath $0`

  if grep "$SCRIPT" "$FILE" >/dev/null ; then
    echo "cron-reminder already installed"
  else
    echo "0 * * * * export DISPLAY=:0 && export XAUTHORITY=/home/"'$USER'"/.Xauthority && sudo $SCRIPT show" >> $FILE
    crontab $FILE
    SFILE=`mktemp`
    echo "ALL ALL = (ALL) NOPASSWD: $SCRIPT" > $SFILE
    sudo chown root:root $SFILE
    sudo chmod 0440 $SFILE
    sudo mv $SFILE /etc/sudoers.d/cron-reminder
    echo "cron-reminder installed"
  fi

  rm $FILE
}

if [ $# -lt 1 ]; then
 usage_error "No operation specified" 
fi

case $1 in
  show|install|-h|--help|help) ;;
  *)
    check_install ;;
esac

case $1 in
  add)
    add_reminder ;;
  list)
    list_reminders ;;
  remove)
    remove_reminder ;;
  show)
    show_reminders ;;
  install)
    install ;;
  -h|--help|help)
    usage ;;
  *)
    usage_error "Incorrect operation '$1'" ;;
esac
